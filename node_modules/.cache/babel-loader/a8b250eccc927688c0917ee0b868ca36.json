{"ast":null,"code":"import _classCallCheck from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/src/views/Gant/Gant.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // needed for dayClick\n\nimport './main.scss';\n\nvar DemoApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DemoApp, _React$Component);\n\n  function DemoApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DemoApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DemoApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.calendarComponentRef = React.createRef();\n    _this.state = {\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        title: 'Event Now',\n        start: new Date()\n      }]\n    };\n\n    _this.toggleWeekends = function () {\n      _this.setState({\n        // update a property\n        calendarWeekends: !_this.state.calendarWeekends\n      });\n    };\n\n    _this.gotoPast = function () {\n      var calendarApi = _this.calendarComponentRef.current.getApi();\n\n      calendarApi.gotoDate('2000-01-01'); // call a method on the Calendar object\n    };\n\n    _this.handleDateClick = function (arg) {\n      //if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\n      _this.setState({\n        // add new event data\n        calendarEvents: _this.state.calendarEvents.concat({\n          // creates a new array\n          title: 'New Event',\n          start: arg.date,\n          allDay: arg.allDay\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DemoApp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"demo-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"demo-app-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.toggleWeekends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"toggle weekends\"), \"\\xA0\", React.createElement(\"button\", {\n        onClick: this.gotoPast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"go to a date in the past\"), \"\\xA0 (also, click a date/time to add an event)\"), React.createElement(\"div\", {\n        className: \"demo-app-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(FullCalendar, {\n        defaultView: \"dayGridMonth\",\n        header: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        },\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        ref: this.calendarComponentRef,\n        weekends: this.state.calendarWeekends,\n        events: this.state.calendarEvents,\n        dateClick: this.handleDateClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })));\n    } //}\n\n  }]);\n\n  return DemoApp;\n}(React.Component);\n\nexport { DemoApp as default };","map":{"version":3,"sources":["/Users/hasanulisyraf/Desktop/coreuifirebase/client/src/views/Gant/Gant.js"],"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","DemoApp","calendarComponentRef","createRef","state","calendarWeekends","calendarEvents","title","start","Date","toggleWeekends","setState","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","concat","date","allDay","left","center","right","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B,C,CAA0D;;AAE1D,OAAO,aAAP;;IAEqBC,O;;;;;;;;;;;;;;;;;UAEnBC,oB,GAAuBN,KAAK,CAACO,SAAN,E;UACvBC,K,GAAQ;AACNC,MAAAA,gBAAgB,EAAE,IADZ;AAENC,MAAAA,cAAc,EAAE,CAAE;AAChB;AAAEC,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE,IAAIC,IAAJ;AAA7B,OADc;AAFV,K;;UAkCRC,c,GAAiB,YAAM;AACrB,YAAKC,QAAL,CAAc;AAAE;AACdN,QAAAA,gBAAgB,EAAE,CAAC,MAAKD,KAAL,CAAWC;AADlB,OAAd;AAGD,K;;UAEDO,Q,GAAW,YAAM;AACf,UAAIC,WAAW,GAAG,MAAKX,oBAAL,CAA0BY,OAA1B,CAAkCC,MAAlC,EAAlB;;AACAF,MAAAA,WAAW,CAACG,QAAZ,CAAqB,YAArB,EAFe,CAEoB;AACpC,K;;UAEDC,e,GAAkB,UAACC,GAAD,EAAS;AACzB;AACE,YAAKP,QAAL,CAAc;AAAG;AACfL,QAAAA,cAAc,EAAE,MAAKF,KAAL,CAAWE,cAAX,CAA0Ba,MAA1B,CAAiC;AAAE;AACjDZ,UAAAA,KAAK,EAAE,WADwC;AAE/CC,UAAAA,KAAK,EAAEU,GAAG,CAACE,IAFoC;AAG/CC,UAAAA,MAAM,EAAEH,GAAG,CAACG;AAHmC,SAAjC;AADJ,OAAd;AAOD,K;;;;;;;6BA/CM;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAG,KAAKX,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,UAEE;AAAQ,QAAA,OAAO,EAAG,KAAKE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,mDADF,EAME;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,WAAW,EAAC,cADd;AAEE,QAAA,MAAM,EAAE;AACNU,UAAAA,IAAI,EAAE,iBADA;AAENC,UAAAA,MAAM,EAAE,OAFF;AAGNC,UAAAA,KAAK,EAAE;AAHD,SAFV;AAOE,QAAA,OAAO,EAAE,CAAE1B,aAAF,EAAiBC,cAAjB,EAAiCC,iBAAjC,CAPX;AAQE,QAAA,GAAG,EAAG,KAAKE,oBARb;AASE,QAAA,QAAQ,EAAG,KAAKE,KAAL,CAAWC,gBATxB;AAUE,QAAA,MAAM,EAAG,KAAKD,KAAL,CAAWE,cAVtB;AAWG,QAAA,SAAS,EAAG,KAAKW,eAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF;AAwBD,K,CAuBD;;;;;EA1DmCrB,KAAK,CAAC6B,S;;SAAtBxB,O","sourcesContent":["import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\n\nimport './main.scss'\n\nexport default class DemoApp extends React.Component {\n\n  calendarComponentRef = React.createRef()\n  state = {\n    calendarWeekends: true,\n    calendarEvents: [ // initial event data\n      { title: 'Event Now', start: new Date() }\n    ]\n  }\n\n  render() {\n    return (\n      <div className='demo-app'>\n        <div className='demo-app-top'>\n          <button onClick={ this.toggleWeekends }>toggle weekends</button>&nbsp;\n          <button onClick={ this.gotoPast }>go to a date in the past</button>&nbsp;\n          (also, click a date/time to add an event)\n        </div>\n        <div className='demo-app-calendar'>\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n            }}\n            plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]}\n            ref={ this.calendarComponentRef }\n            weekends={ this.state.calendarWeekends }\n            events={ this.state.calendarEvents }\n             dateClick={ this.handleDateClick }\n            />\n        </div>\n      </div>\n    )\n  }\n\n  toggleWeekends = () => {\n    this.setState({ // update a property\n      calendarWeekends: !this.state.calendarWeekends\n    })\n  }\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi()\n    calendarApi.gotoDate('2000-01-01') // call a method on the Calendar object\n  }\n\n  handleDateClick = (arg) => {\n    //if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\n      this.setState({  // add new event data\n        calendarEvents: this.state.calendarEvents.concat({ // creates a new array\n          title: 'New Event',\n          start: arg.date,\n          allDay: arg.allDay\n        })\n      })\n    }\n  //}\n\n}"]},"metadata":{},"sourceType":"module"}