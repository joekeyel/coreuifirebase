{"ast":null,"code":"import _readOnlyError from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _classCallCheck from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport app from \"./firebase\";\nimport axios from 'axios';\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    var _this = this;\n\n    _classCallCheck(this, Auth);\n\n    this.handleLogin = function (email, password, cb) {\n      var dataForm = new FormData();\n      dataForm.append(\"username\", email);\n      dataForm.append(\"password\", password);\n      var requestOptions = {\n        method: 'POST',\n        body: dataForm\n      };\n      var headers = '';\n      var self = _this;\n      axios.post(\"https://nd.tm.com.my/spheremobile/loginprocess.php\", dataForm, headers = (_readOnlyError(\"headers\"), {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      })).then(function (response) {\n        // fetch('https://nd.tm.com.my/spheremobile_test/loginprocess.php', requestOptions)\n        //     .then(response => response.json())\n        //     .then(data => {\n        this.authenticated.status = true;\n        console.log(response);\n\n        if (response.result === \"ok\") {\n          cb();\n          app.auth().signInWithCustomToken(response.token).catch(function (error) {\n            console.log(app.auth().currentUser.uid); // Handle Errors here.\n\n            var errorCode = error.code;\n            var errorMessage = error.message; // ...\n          });\n          app.auth().onAuthStateChanged(function (user) {\n            if (user) {\n              // User is signed in.\n              console.log(user);\n            } else {// No user is signed in.\n            }\n          });\n        }\n      });\n    };\n\n    this.handleLogin2 = function (email, password, cb) {\n      var dataForm = new FormData();\n      dataForm.append(\"username\", email);\n      dataForm.append(\"password\", password);\n      var requestOptions = {\n        method: 'POST',\n        body: dataForm\n      };\n      var self = _this;\n      fetch('/cas/login', requestOptions).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.authenticated.status = true;\n        console.log(data); //  if(data.result ===\"ok\"){\n        //  cb()\n        //   app.auth().signInWithCustomToken(data.token).catch(function(error) {\n        //     console.log(app.auth().currentUser.uid)\n        //     // Handle Errors here.\n        //     var errorCode = error.code;\n        //     var errorMessage = error.message;\n        //     // ...\n        //   });\n        //   app.auth().onAuthStateChanged(function(user) {\n        //     if (user) {\n        //       // User is signed in.\n        //       console.log(user)\n        //     } else {\n        //       // No user is signed in.\n        //     }\n        //   });\n        //  }\n      });\n    };\n\n    this.authenticated = {\n      status: false,\n      region: \"\",\n      division: \"\"\n    };\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login(cb) {\n      this.authenticated.status = true;\n      this.authenticated.region = \"KL\"; //this.handleLogin();\n\n      cb();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout(cb) {\n      this.authenticated.status = false;\n      this.authenticated.region = \"\";\n      cb();\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return this.authenticated;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport default new Auth();","map":{"version":3,"sources":["/Users/hasanulisyraf/Desktop/coreuifirebase/client/src/auth.js"],"names":["app","axios","Auth","handleLogin","email","password","cb","dataForm","FormData","append","requestOptions","method","body","headers","self","post","then","response","authenticated","status","console","log","result","auth","signInWithCustomToken","token","catch","error","currentUser","uid","errorCode","code","errorMessage","message","onAuthStateChanged","user","handleLogin2","fetch","json","data","region","division"],"mappings":"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","sourcesContent":["import app from \"./firebase\"\nimport axios from 'axios'\n\nclass Auth {\n    constructor() {\n      this.authenticated = {status:false,region:\"\",division:\"\"};\n    }\n  \n    login(cb) {\n      this.authenticated.status = true;\n      this.authenticated.region = \"KL\"\n      //this.handleLogin();\n      cb();\n    }\n  \n    logout(cb) {\n      this.authenticated.status = false;\n      this.authenticated.region = \"\"\n      cb();\n    }\n  \n    isAuthenticated() {\n      return this.authenticated;\n    }\n\n\n    handleLogin = (email,password,cb)   =>  {\n\n  \n      const dataForm = new FormData();\n        dataForm.append(\"username\", email);\n        dataForm.append(\"password\", password);\n\n\n\n        const requestOptions = {\n          method: 'POST',\n          body: dataForm\n      };\n     \n      const headers = ''\n\n      var self = this;\n      axios.post(\"https://nd.tm.com.my/spheremobile/loginprocess.php\", dataForm,\n      headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      })\n      .then(function (response) {\n      \n      // fetch('https://nd.tm.com.my/spheremobile_test/loginprocess.php', requestOptions)\n      //     .then(response => response.json())\n      //     .then(data => {\n            this.authenticated.status = true\n           console.log(response)\n           if(response.result ===\"ok\"){\n           cb()\n\n           \n\n            app.auth().signInWithCustomToken(response.token).catch(function(error) {\n\n\n              console.log(app.auth().currentUser.uid)\n              // Handle Errors here.\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              // ...\n            \n            });\n\n\n            app.auth().onAuthStateChanged(function(user) {\n              if (user) {\n                // User is signed in.\n                console.log(user)\n              } else {\n                // No user is signed in.\n              }\n            });\n          \n          \n           }\n          }\n\n        )\n      \n      \n  \n           \n  \n    }\n\n\n    \n\n\n    handleLogin2 = (email,password,cb)   =>  {\n\n  \n      const dataForm = new FormData();\n        dataForm.append(\"username\", email);\n        dataForm.append(\"password\", password);\n\n\n\n        const requestOptions = {\n          method: 'POST',\n          body: dataForm\n      };\n      var self = this\n      fetch('/cas/login', requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            this.authenticated.status = true\n           console.log(data)\n          \n          \n          //  if(data.result ===\"ok\"){\n          //  cb()\n\n           \n\n          //   app.auth().signInWithCustomToken(data.token).catch(function(error) {\n\n\n          //     console.log(app.auth().currentUser.uid)\n          //     // Handle Errors here.\n          //     var errorCode = error.code;\n          //     var errorMessage = error.message;\n          //     // ...\n            \n          //   });\n\n\n          //   app.auth().onAuthStateChanged(function(user) {\n          //     if (user) {\n          //       // User is signed in.\n          //       console.log(user)\n          //     } else {\n          //       // No user is signed in.\n          //     }\n          //   });\n          \n          \n          //  }\n          }\n\n        )\n      \n      \n  \n           \n  \n    }\n\n\n}\n\n\n\n  \n  export default new Auth();\n  "]},"metadata":{},"sourceType":"module"}