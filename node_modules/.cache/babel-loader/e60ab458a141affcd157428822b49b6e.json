{"ast":null,"code":"import _classCallCheck from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hasanulisyraf/Desktop/coreuifirebase/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport app from \"./firebase\";\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    var _this = this;\n\n    _classCallCheck(this, Auth);\n\n    this.handleLogin = function (email, password, cb) {\n      var dataForm = new FormData();\n      dataForm.append(\"username\", email);\n      dataForm.append(\"password\", password);\n      var requestOptions = {\n        method: 'POST',\n        body: dataForm\n      };\n      var self = _this;\n      fetch('/loginprocess', requestOptions).then(function (response) {\n        return response.json();\n      } //console.log(response)\n      ).then(function (data) {\n        _this.authenticated.status = true;\n        console.log(data);\n\n        if (data.result === \"ok\") {\n          cb();\n          app.auth().signInWithCustomToken(data.token).catch(function (error) {\n            console.log(app.auth().currentUser.uid); // Handle Errors here.\n\n            var errorCode = error.code;\n            var errorMessage = error.message; // ...\n          });\n          app.auth().onAuthStateChanged(function (user) {\n            if (user) {\n              // User is signed in.\n              console.log(user);\n            } else {// No user is signed in.\n            }\n          });\n        }\n      });\n      fetch('fetchBandwidth').then(function (response) {\n        return console.log(response);\n      }).then(function (data) {\n        return console.log(data);\n      });\n    };\n\n    this.authenticated = {\n      status: false,\n      region: \"\",\n      division: \"\"\n    };\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login(cb) {\n      this.authenticated.status = true;\n      this.authenticated.region = \"KL\"; //this.handleLogin();\n\n      cb();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout(cb) {\n      this.authenticated.status = false;\n      this.authenticated.region = \"\";\n      cb();\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return this.authenticated;\n    } // handleLogin2 = (email,password,cb)   =>  {\n    //   const dataForm = new FormData();\n    //     dataForm.append(\"username\", email);\n    //     dataForm.append(\"password\", password);\n    //     const requestOptions = {\n    //       method: 'POST',\n    //       body: dataForm\n    //   };\n    //   var self = this\n    //   fetch('/cas/login', requestOptions)\n    //       .then(response => response.json())\n    //       .then(data => {\n    //         this.authenticated.status = true\n    //        console.log(data)\n    //       //  if(data.result ===\"ok\"){\n    //       //  cb()\n    //       //   app.auth().signInWithCustomToken(data.token).catch(function(error) {\n    //       //     console.log(app.auth().currentUser.uid)\n    //       //     // Handle Errors here.\n    //       //     var errorCode = error.code;\n    //       //     var errorMessage = error.message;\n    //       //     // ...\n    //       //   });\n    //       //   app.auth().onAuthStateChanged(function(user) {\n    //       //     if (user) {\n    //       //       // User is signed in.\n    //       //       console.log(user)\n    //       //     } else {\n    //       //       // No user is signed in.\n    //       //     }\n    //       //   });\n    //       //  }\n    //       }\n    //     )\n    // }\n\n  }]);\n\n  return Auth;\n}();\n\nexport default new Auth();","map":{"version":3,"sources":["/Users/hasanulisyraf/Desktop/coreuifirebase/client/src/auth.js"],"names":["app","Auth","handleLogin","email","password","cb","dataForm","FormData","append","requestOptions","method","body","self","fetch","then","response","json","data","authenticated","status","console","log","result","auth","signInWithCustomToken","token","catch","error","currentUser","uid","errorCode","code","errorMessage","message","onAuthStateChanged","user","region","division"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,YAAhB;;IAEMC,I;;;AACF,kBAAc;AAAA;;AAAA;;AAAA,SAsBdC,WAtBc,GAsBA,UAACC,KAAD,EAAOC,QAAP,EAAgBC,EAAhB,EAA0B;AAGtC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACED,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BL,KAA5B;AACAG,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BJ,QAA5B;AAIA,UAAMK,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,IAAI,EAAEL;AAFe,OAAvB;AAMF,UAAIM,IAAI,GAAG,KAAX;AACAC,MAAAA,KAAK,CAAC,eAAD,EAAkBJ,cAAlB,CAAL,CACKK,IADL,CACU,UAAAC,QAAQ;AAAA,eAEZA,QAAQ,CAACC,IAAT,EAFY;AAAA,OADlB,CAIM;AAJN,QAOKF,IAPL,CAOU,UAAAG,IAAI,EAAI;AACZ,QAAA,KAAI,CAACC,aAAL,CAAmBC,MAAnB,GAA4B,IAA5B;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,YAAGA,IAAI,CAACK,MAAL,KAAe,IAAlB,EAAuB;AACvBjB,UAAAA,EAAE;AAIDL,UAAAA,GAAG,CAACuB,IAAJ,GAAWC,qBAAX,CAAiCP,IAAI,CAACQ,KAAtC,EAA6CC,KAA7C,CAAmD,UAASC,KAAT,EAAgB;AAGjEP,YAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAG,CAACuB,IAAJ,GAAWK,WAAX,CAAuBC,GAAnC,EAHiE,CAIjE;;AACA,gBAAIC,SAAS,GAAGH,KAAK,CAACI,IAAtB;AACA,gBAAIC,YAAY,GAAGL,KAAK,CAACM,OAAzB,CANiE,CAOjE;AAED,WATD;AAYAjC,UAAAA,GAAG,CAACuB,IAAJ,GAAWW,kBAAX,CAA8B,UAASC,IAAT,EAAe;AAC3C,gBAAIA,IAAJ,EAAU;AACR;AACAf,cAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AACD,aAHD,MAGO,CACL;AACD;AACF,WAPD;AAUA;AACD,OAtCL;AA0CEtB,MAAAA,KAAK,CAAC,gBAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAGZK,OAAO,CAACC,GAAR,CAAYN,QAAZ,CAHY;AAAA,OADd,EAOCD,IAPD,CAOM,UAAAG,IAAI;AAAA,eAAIG,OAAO,CAACC,GAAR,CAAYJ,IAAZ,CAAJ;AAAA,OAPV;AAUH,KA1Fa;;AACZ,SAAKC,aAAL,GAAqB;AAACC,MAAAA,MAAM,EAAC,KAAR;AAAciB,MAAAA,MAAM,EAAC,EAArB;AAAwBC,MAAAA,QAAQ,EAAC;AAAjC,KAArB;AACD;;;;0BAEKhC,E,EAAI;AACR,WAAKa,aAAL,CAAmBC,MAAnB,GAA4B,IAA5B;AACA,WAAKD,aAAL,CAAmBkB,MAAnB,GAA4B,IAA5B,CAFQ,CAGR;;AACA/B,MAAAA,EAAE;AACH;;;2BAEMA,E,EAAI;AACT,WAAKa,aAAL,CAAmBC,MAAnB,GAA4B,KAA5B;AACA,WAAKD,aAAL,CAAmBkB,MAAnB,GAA4B,EAA5B;AACA/B,MAAAA,EAAE;AACH;;;sCAEiB;AAChB,aAAO,KAAKa,aAAZ;AACD,K,CA0ED;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAMA;;;;;;;AAQF,eAAe,IAAIjB,IAAJ,EAAf","sourcesContent":["import app from \"./firebase\"\n\nclass Auth {\n    constructor() {\n      this.authenticated = {status:false,region:\"\",division:\"\"};\n    }\n  \n    login(cb) {\n      this.authenticated.status = true;\n      this.authenticated.region = \"KL\"\n      //this.handleLogin();\n      cb();\n    }\n  \n    logout(cb) {\n      this.authenticated.status = false;\n      this.authenticated.region = \"\"\n      cb();\n    }\n  \n    isAuthenticated() {\n      return this.authenticated;\n    }\n\n\n    handleLogin = (email,password,cb)   =>  {\n\n  \n      const dataForm = new FormData();\n        dataForm.append(\"username\", email);\n        dataForm.append(\"password\", password);\n\n\n\n        const requestOptions = {\n          method: 'POST',\n          body: dataForm\n      };\n\n      \n      var self = this\n      fetch('/loginprocess', requestOptions)\n          .then(response =>\n           \n            response.json()\n            //console.log(response)\n          \n          )\n          .then(data => {\n            this.authenticated.status = true\n           console.log(data)\n           if(data.result ===\"ok\"){\n           cb()\n\n           \n\n            app.auth().signInWithCustomToken(data.token).catch(function(error) {\n\n\n              console.log(app.auth().currentUser.uid)\n              // Handle Errors here.\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              // ...\n            \n            });\n\n\n            app.auth().onAuthStateChanged(function(user) {\n              if (user) {\n                // User is signed in.\n                console.log(user)\n              } else {\n                // No user is signed in.\n              }\n            });\n          \n          \n           }\n          }\n\n        )\n      \n        fetch('fetchBandwidth')\n        .then(response => \n         \n         \n          console.log(response)\n        \n        )\n        .then(data => console.log(data))  \n           \n  \n    }\n\n\n    // handleLogin2 = (email,password,cb)   =>  {\n\n  \n    //   const dataForm = new FormData();\n    //     dataForm.append(\"username\", email);\n    //     dataForm.append(\"password\", password);\n\n\n\n    //     const requestOptions = {\n    //       method: 'POST',\n    //       body: dataForm\n    //   };\n    //   var self = this\n    //   fetch('/cas/login', requestOptions)\n    //       .then(response => response.json())\n    //       .then(data => {\n    //         this.authenticated.status = true\n    //        console.log(data)\n          \n          \n    //       //  if(data.result ===\"ok\"){\n    //       //  cb()\n\n           \n\n    //       //   app.auth().signInWithCustomToken(data.token).catch(function(error) {\n\n\n    //       //     console.log(app.auth().currentUser.uid)\n    //       //     // Handle Errors here.\n    //       //     var errorCode = error.code;\n    //       //     var errorMessage = error.message;\n    //       //     // ...\n            \n    //       //   });\n\n\n    //       //   app.auth().onAuthStateChanged(function(user) {\n    //       //     if (user) {\n    //       //       // User is signed in.\n    //       //       console.log(user)\n    //       //     } else {\n    //       //       // No user is signed in.\n    //       //     }\n    //       //   });\n          \n          \n    //       //  }\n    //       }\n\n    //     )\n      \n      \n  \n           \n  \n    // }\n\n\n}\n\n\n\n  \n  export default new Auth();\n  "]},"metadata":{},"sourceType":"module"}