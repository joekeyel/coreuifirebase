{"map":"{\"version\":3,\"sources\":[\"/Users/hasanulisyraf/Desktop/coreuifirebase/client/src/views/Gant/Gant.js\"],\"names\":[\"DemoApp\",\"calendarComponentRef\",\"React\",\"createRef\",\"state\",\"calendarWeekends\",\"calendarEvents\",\"title\",\"start\",\"Date\",\"toggleWeekends\",\"_this\",\"setState\",\"gotoPast\",\"current\",\"getApi\",\"gotoDate\",\"handleDateClick\",\"arg\",\"concat\",\"date\",\"allDay\",\"react__WEBPACK_IMPORTED_MODULE_5___default\",\"a\",\"createElement\",\"className\",\"onClick\",\"this\",\"_fullcalendar_react__WEBPACK_IMPORTED_MODULE_6__\",\"defaultView\",\"header\",\"left\",\"center\",\"right\",\"plugins\",\"dayGridPlugin\",\"timeGridPlugin\",\"interactionPlugin\",\"ref\",\"weekends\",\"events\",\"dateClick\",\"Component\"],\"mappings\":\"wQAQqBA,sNAEnBC,qBAAuBC,EAAAA,EAAMC,cAC7BC,MAAQ,CACNC,kBAAkB,EAClBC,eAAgB,CACd,CAAEC,MAAO,YAAaC,MAAO,IAAIC,UA+BrCC,eAAiB,WACfC,EAAKC,SAAS,CACZP,kBAAmBM,EAAKP,MAAMC,sBAIlCQ,SAAW,WACSF,EAAKV,qBAAqBa,QAAQC,SACxCC,SAAS,iBAGvBC,gBAAkB,SAACC,GAEfP,EAAKC,SAAS,CACZN,eAAgBK,EAAKP,MAAME,eAAea,OAAO,CAC/CZ,MAAO,YACPC,MAAOU,EAAIE,KACXC,OAAQH,EAAIG,oFA3ClB,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQE,QAAUC,KAAKjB,gBAAvB,mBADF,OAEEY,EAAAC,EAAAC,cAAA,SAAA,CAAQE,QAAUC,KAAKd,UAAvB,4BAFF,kDAKAS,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,YAAY,eACZC,OAAQ,CACNC,KAAM,kBACNC,OAAQ,QACRC,MAAO,kDAETC,QAAS,CAAEC,EAAAA,EAAeC,EAAAA,EAAgBC,EAAAA,GAC1CC,IAAMX,KAAK1B,qBACXsC,SAAWZ,KAAKvB,MAAMC,iBACtBmC,OAASb,KAAKvB,MAAME,eACnBmC,UAAYd,KAAKV,2BA9BOf,EAAAA,EAAMwC\",\"sourcesContent\":[\"import React from 'react'\\nimport FullCalendar from '@fullcalendar/react'\\nimport dayGridPlugin from '@fullcalendar/daygrid'\\nimport timeGridPlugin from '@fullcalendar/timegrid'\\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\\n\\nimport './main.scss'\\n\\nexport default class DemoApp extends React.Component {\\n\\n  calendarComponentRef = React.createRef()\\n  state = {\\n    calendarWeekends: true,\\n    calendarEvents: [ // initial event data\\n      { title: 'Event Now', start: new Date() }\\n    ]\\n  }\\n\\n  render() {\\n    return (\\n      <div className='demo-app'>\\n        <div className='demo-app-top'>\\n          <button onClick={ this.toggleWeekends }>toggle weekends</button>&nbsp;\\n          <button onClick={ this.gotoPast }>go to a date in the past</button>&nbsp;\\n          (also, click a date/time to add an event)\\n        </div>\\n        <div className='demo-app-calendar'>\\n          <FullCalendar\\n            defaultView=\\\"dayGridMonth\\\"\\n            header={{\\n              left: 'prev,next today',\\n              center: 'title',\\n              right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\\n            }}\\n            plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]}\\n            ref={ this.calendarComponentRef }\\n            weekends={ this.state.calendarWeekends }\\n            events={ this.state.calendarEvents }\\n             dateClick={ this.handleDateClick }\\n            />\\n        </div>\\n      </div>\\n    )\\n  }\\n\\n  toggleWeekends = () => {\\n    this.setState({ // update a property\\n      calendarWeekends: !this.state.calendarWeekends\\n    })\\n  }\\n\\n  gotoPast = () => {\\n    let calendarApi = this.calendarComponentRef.current.getApi()\\n    calendarApi.gotoDate('2000-01-01') // call a method on the Calendar object\\n  }\\n\\n  handleDateClick = (arg) => {\\n    //if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\\n      this.setState({  // add new event data\\n        calendarEvents: this.state.calendarEvents.concat({ // creates a new array\\n          title: 'New Event',\\n          start: arg.date,\\n          allDay: arg.allDay\\n        })\\n      })\\n    }\\n  //}\\n\\n}\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{1116:function(e,t,a){},1155:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"default\",function(){return m});var n=a(142),c=a(143),l=a(233),r=a(231),d=a(232),o=a(3),s=a.n(o),i=a(1112),p=a(996),u=a(1114),k=a(1115),m=(a(1116),function(e){function t(){var e,a;Object(n.a)(this,t);for(var c=arguments.length,d=new Array(c),o=0;o<c;o++)d[o]=arguments[o];return(a=Object(l.a)(this,(e=Object(r.a)(t)).call.apply(e,[this].concat(d)))).calendarComponentRef=s.a.createRef(),a.state={calendarWeekends:!0,calendarEvents:[{title:\"Event Now\",start:new Date}]},a.toggleWeekends=function(){a.setState({calendarWeekends:!a.state.calendarWeekends})},a.gotoPast=function(){a.calendarComponentRef.current.getApi().gotoDate(\"2000-01-01\")},a.handleDateClick=function(e){a.setState({calendarEvents:a.state.calendarEvents.concat({title:\"New Event\",start:e.date,allDay:e.allDay})})},a}return Object(d.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return s.a.createElement(\"div\",{className:\"demo-app\"},s.a.createElement(\"div\",{className:\"demo-app-top\"},s.a.createElement(\"button\",{onClick:this.toggleWeekends},\"toggle weekends\"),\"\\xa0\",s.a.createElement(\"button\",{onClick:this.gotoPast},\"go to a date in the past\"),\"\\xa0 (also, click a date/time to add an event)\"),s.a.createElement(\"div\",{className:\"demo-app-calendar\"},s.a.createElement(i.a,{defaultView:\"dayGridMonth\",header:{left:\"prev,next today\",center:\"title\",right:\"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"},plugins:[p.d,u.a,k.a],ref:this.calendarComponentRef,weekends:this.state.calendarWeekends,events:this.state.calendarEvents,dateClick:this.handleDateClick})))}}]),t}(s.a.Component))}}]);","extractedComments":[]}